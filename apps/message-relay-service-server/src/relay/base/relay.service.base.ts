/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Relay as PrismaRelay } from "@prisma/client";

export class RelayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RelayCountArgs, "select">): Promise<number> {
    return this.prisma.relay.count(args);
  }

  async relays(args: Prisma.RelayFindManyArgs): Promise<PrismaRelay[]> {
    return this.prisma.relay.findMany(args);
  }
  async relay(args: Prisma.RelayFindUniqueArgs): Promise<PrismaRelay | null> {
    return this.prisma.relay.findUnique(args);
  }
  async createRelay(args: Prisma.RelayCreateArgs): Promise<PrismaRelay> {
    return this.prisma.relay.create(args);
  }
  async updateRelay(args: Prisma.RelayUpdateArgs): Promise<PrismaRelay> {
    return this.prisma.relay.update(args);
  }
  async deleteRelay(args: Prisma.RelayDeleteArgs): Promise<PrismaRelay> {
    return this.prisma.relay.delete(args);
  }
}
